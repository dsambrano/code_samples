# ssh keys and config files

# For this to work you need to change the servers /etc/ssh/sshd_config to enable PubkeyAuthentication yes and or RSAAuthentication yes. Additional as noted in sources, you need cannot have 777 privledges on the users folder as well as the .ssh folder of the server you are sshing into.



###### Sources/Citations
# Primarily from: https://www.youtube.com/watch?v=pE3EuiyShoM
# Backup/basics from: https://www.youtube.com/watch?v=33dEcCKGBO4 
# Some extra options stored: https://linuxize.com/post/using-the-ssh-config-file/
# Annoying Synology Nas are not properly configured for SSH keys so you can follow this post to get it up and running: https://blog.aaronlenoir.com/2018/05/06/ssh-into-synology-nas-with-ssh-key/
    # Note: there are additional chmods necessary listed in the comments: chmod 700 ~/.ssh; chmod 600 ~/.ssh/authorized_keys


# ssh username@ipaddress-or-url
# example below:
ssh dsambrano@192.168.1.69 # Can also add the -i to specify which ssh key to use as well as -p for a specific port



# ssh key generation 
ssh-keygen -t ed25519 -C "nas-synology" # -t specifies the type and -C is comment. You will want to name it something useful when it asks. Also make sure you specify the whole path



# ssh share/send key to server
ssh-copy-id -i ~/.ssh/id_rsa.pub -p 69420 username@url-or-ipaddress # public key file to server and specify port as well as username and address



# ssh config file sample
Host nas # this is the alias to be used 
    Hostname 192.168.1.69 # The url or ip-address that you want to connect to 
    User dsambrano # Username for the
    Port 69420 # Set the posrt that you want to use default 22 (equal to -p 69420)
    IdentityFile ~/.ssh/id_rsa # The location for the ssh key location (NOTE: this is the PRIVATE key)
    Compression yes # Do you want ot use compression
    LogLevel INFO # What level of logging do you want
    IgnoreUnknown AddKeysToAgent,UseKeychain # Will likely want this line and next two to be the first entry on Host * so it affects all hosts: https://stackoverflow.com/a/47455373
    AddKeysToAgent yes # Adds the SSH key to ssh-agent so you dont need to manually with ssh-add (https://superuser.com/a/1114257)
    UseKeychain yes # Uses keychain to store the added keys (Does not work on Linux so you need the Ignore line as well (see previous two lines https://www.unixtutorial.org/ssh-bad-configuration-option-usekeychain/

# Update the ssh agent to only requre password one time 
eval $(ssh-agent) # Run ssh-agent in the background and keep it running (so long as this shell is open)
ssh-add ~/.ssh/id_rsa # Adds the ssh key to the agent now, you only need to type the password once (you can also just log into the server if key is in your config file so you dont have to add them separately)



## Securtiy

# You might also want to secure your ssh daemon by only allowing localhosts to ssh in. This can be done by changing your `/etc/hosts.deny` file to have `sshd: All Except Local`. Alternatively, you can specify that only a specific IP address can access the server with the `etc/hosts.allow` file ([source](https://stackoverflow.com/a/32222907)).

# You might also want to also want to remove password access. And require all ssh sessions to use an sshkey. This can be done by editing the `/ect/ssh/ssh_config` file and uncomment the line that says: `    PasswordAuthentication no`.

# You should also probably prevent root access from ssh as well, but we can cover that in a separate security post. 
